name: Dev-Data Service CI/CD with Docker
on: workflow_dispatch
jobs:
  dev-build-and-deploy-data-service:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go 
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.x'

      - name: Download dependencies
        run: cd data-management-service && go mod download && go mod vendor 

      - name: Build
        run: cd data-management-service && env GOOS=linux CGO_ENABLED=0 go build -o dataApp .

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: ./data-management-service
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/dhammanava-data-image:latest

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.LINUX_PRIVATE_KEY_BASE64 }}" | base64 -d > ~/.ssh/id_rsa
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa ${{ secrets.LINUX_HOST }} >> ~/.ssh/known_hosts
      
      - name: SSH to Server and Start service
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.LINUX_USERNAME }}@${{ secrets.LINUX_HOST }}
          cd dhammanava-search
          docker stop data-service || true
          docker rm  data-service || true
          docker image rm ${{ secrets.DOCKERHUB_USERNAME }}/dhammanava-data-image:latest
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/dhammanava-data-image:latest
          docker compose -f docker-compose.prod.yml up -d data-service


      # - name: Deploy to Ubuntu server
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{secrets.LINUX_HOST}}
      #     username: ${{secrets.LINUX_USERNAME}}
      #     key: ${{ secrets.LINUX_PRIVATE_KEY }}
      #     script: |
      #       docker stop data-service || true
      #       docker rm  data-service || true
      #       docker image rm ${{ secrets.DOCKERHUB_USERNAME }}/dhammanava-data-image:latest
      #       docker pull ${{ secrets.DOCKERHUB_USERNAME }}/dhammanava-data-image:latest
      #       cd dhammanava-search
      #       docker compose -f docker-compose.prod.yml up -d data-service

#TODO : Versioning for docker image
