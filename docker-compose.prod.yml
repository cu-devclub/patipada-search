version: '3'

services:
  search-service:
    image: dhammanava-search-image:latest
    container_name: search-container
    environment:
      ESDB_URL: ${ESDB_URL}
      ESDB_USERNAME: ${ESDB_USERNAME}
      ESDB_PASSWORD: ${ESDB_PASSWORD}
      FRONTEND_URL: ${WEB_CORS_TARGET}
    working_dir: /app/search-esdb
    ports:
      - 8081:8081
    depends_on:
      - elastic-db
    networks:
      - backbone

  elastic-db:
    image: dhammanava-elastic-image
    container_name: elastic-container
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ESDB_PASSWORD}
    ports:
      - 9200:9200
    networks:
      - backbone

  frontend:
    image: dhammanava-frontend-image:latest
    container_name: frontend-container
    ports:
      - 5173:5173
    networks:
      - backbone

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:8.10.4
  #   ports:
  #     - 5601:5601
  #   environment:
  #     - ELASTICSEARCH_URL=http://elastic-db:9200
  #   depends_on:
  #     - elastic-db
  #   networks:
  #     - backbone

  auth-service:
    container_name: auth-container
    image: dhammanava-auth-image:latest
    environment:
      - FRONTEND_URL=${WEB_CORS_TARGET}
      - JWT_KEY=${JWT_KEY} 
      - DATABASE_HOST=auth-db
      - DATABASE_NAME=Authen
      - DATABASE_USER=${AUTH_DB_USER}
      - DATABASE_PASSWORD=${AUTH_DB_PASSWORD}
    working_dir: /app/auth
    ports:
      - 8082:8082
    depends_on:
      - auth-db
    networks:
      - backbone

  auth-db:
    image: postgres:latest
    container_name: auth-postgres-container
    environment:
      POSTGRES_DB: ${AUTH_DB_NAME}
      POSTGRES_USER: ${AUTH_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - ./auth-db:/docker-entrypoint-initdb.d
      - ./volumes/database/auth:/var/lib/postgresql/data
    networks:
      - backbone
      
  nginx:
    image: nginx:latest
    container_name: nginx_container
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    networks:
      - backbone
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/www/:/var/www/certbot
      - ./certbot/conf/:/etc/letsencrypt

  certbot:
    image: certbot/certbot:latest
    networks:
      - backbone
    volumes:
      - ./certbot/www/:/var/www/certbot
      - ./certbot/conf/:/etc/letsencrypt
    command: certonly --webroot -w /var/www/certbot --force-renewal --email naruemon.npr@gmail.com -d search.dhammanava.net --agree-tos

networks:
  backbone:
    driver: bridge
